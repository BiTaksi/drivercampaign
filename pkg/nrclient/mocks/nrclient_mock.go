// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/nrclient/nrclient.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	newrelic "github.com/newrelic/go-agent/v3/newrelic"
)

// MockINewRelicInstance is a mock of INewRelicInstance interface.
type MockINewRelicInstance struct {
	ctrl     *gomock.Controller
	recorder *MockINewRelicInstanceMockRecorder
}

// MockINewRelicInstanceMockRecorder is the mock recorder for MockINewRelicInstance.
type MockINewRelicInstanceMockRecorder struct {
	mock *MockINewRelicInstance
}

// NewMockINewRelicInstance creates a new mock instance.
func NewMockINewRelicInstance(ctrl *gomock.Controller) *MockINewRelicInstance {
	mock := &MockINewRelicInstance{ctrl: ctrl}
	mock.recorder = &MockINewRelicInstanceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINewRelicInstance) EXPECT() *MockINewRelicInstanceMockRecorder {
	return m.recorder
}

// Application mocks base method.
func (m *MockINewRelicInstance) Application() *newrelic.Application {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Application")
	ret0, _ := ret[0].(*newrelic.Application)
	return ret0
}

// Application indicates an expected call of Application.
func (mr *MockINewRelicInstanceMockRecorder) Application() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Application", reflect.TypeOf((*MockINewRelicInstance)(nil).Application))
}
